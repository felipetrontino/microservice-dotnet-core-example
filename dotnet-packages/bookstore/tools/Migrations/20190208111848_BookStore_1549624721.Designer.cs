// <auto-generated />
using System;
using Bookstore.Tools.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bookstore.Tools.Migrations
{
    [DbContext(typeof(DbMigrations))]
    [Migration("20190208111848_Bookstore_1549624721")]
    partial class Bookstore_1549624721
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Bookstore")
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("Bookstore.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<DateTime>("InsertedAt");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("Language");

                    b.Property<string>("Tenant");

                    b.Property<string>("Title");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("DeletedAt");

                    b.HasIndex("InsertedAt");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Tenant");

                    b.HasIndex("UpdatedAt");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("Bookstore.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<string>("DocumentId");

                    b.Property<string>("Email");

                    b.Property<DateTime>("InsertedAt");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<string>("State");

                    b.Property<string>("Tenant");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("DeletedAt");

                    b.HasIndex("InsertedAt");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Tenant");

                    b.HasIndex("UpdatedAt");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Bookstore.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid?>("CustomerId");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<DateTime>("InsertedAt");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Number");

                    b.Property<int>("Status");

                    b.Property<string>("Tenant");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeletedAt");

                    b.HasIndex("InsertedAt");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Tenant");

                    b.HasIndex("UpdatedAt");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Bookstore.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("BookId");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<DateTime>("InsertedAt");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<Guid?>("OrderId");

                    b.Property<double>("Price");

                    b.Property<double>("Quantity");

                    b.Property<string>("Tenant");

                    b.Property<double>("Total");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("DeletedAt");

                    b.HasIndex("InsertedAt");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("OrderId");

                    b.HasIndex("Tenant");

                    b.HasIndex("UpdatedAt");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("Bookstore.Entities.Order", b =>
                {
                    b.HasOne("Bookstore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Bookstore.Entities.OrderItem", b =>
                {
                    b.HasOne("Bookstore.Entities.Book", "Book")
                        .WithMany("Items")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bookstore.Entities.Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
