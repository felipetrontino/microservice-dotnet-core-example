// <auto-generated />
using System;
using Book.Tools.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Book.Tools.Migrations
{
    [DbContext(typeof(DbMigrations))]
    [Migration("20190208112129_Book_1549624884")]
    partial class Book_1549624884
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("book")
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("Book.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AuthorId");

                    b.Property<string>("AuthorName");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<DateTime>("InsertedAt");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("Language");

                    b.Property<string>("Tenant");

                    b.Property<string>("Title");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("DeletedAt");

                    b.HasIndex("InsertedAt");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Tenant");

                    b.HasIndex("UpdatedAt");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("Book.Entities.BookAuthor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<DateTime>("InsertedAt");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("Tenant");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("DeletedAt");

                    b.HasIndex("InsertedAt");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Tenant");

                    b.HasIndex("UpdatedAt");

                    b.ToTable("BookAuthor");
                });

            modelBuilder.Entity("Book.Entities.BookCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<DateTime>("InsertedAt");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("Tenant");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("DeletedAt");

                    b.HasIndex("InsertedAt");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Tenant");

                    b.HasIndex("UpdatedAt");

                    b.ToTable("BookCategory");
                });

            modelBuilder.Entity("Book.Entities.BookCategoryBook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("BookId");

                    b.Property<Guid?>("CategoryId");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<DateTime>("InsertedAt");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Tenant");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DeletedAt");

                    b.HasIndex("InsertedAt");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Tenant");

                    b.HasIndex("UpdatedAt");

                    b.ToTable("BookCategoryBook");
                });

            modelBuilder.Entity("Book.Entities.Book", b =>
                {
                    b.HasOne("Book.Entities.BookAuthor", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Book.Entities.BookCategoryBook", b =>
                {
                    b.HasOne("Book.Entities.Book", "Book")
                        .WithMany("Categories")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Book.Entities.BookCategory", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
